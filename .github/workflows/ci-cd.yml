name: Integration continue - Tests
on:
  push:
    branches: ['develop', 'release-*']
  workflow_dispatch:
jobs:
  test:
    name: Test - Unit & Integration & SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with: { fetch-depth: 0 }
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Unit & Integration Tests
        run: mvn -B verify
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
      - name: slack-webhook-payload
        uses: alonsohki/slack-webhook-payload@v1
        if: ${{ job.status == 'success' }}
        with:
          # Slack webhook URL
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }} # default is
          # Content to be sent to the incoming webhook, in JSON format
          content:
            '{
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Details of  ${{ github.event_name }}  ... for  ${{github.actor }}",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "The code status is  ${{ job.status }}  congratulation take a cookie :cookie: for the coffee :smile:"
                  },
                  "accessory": {
                    "type": "image",
                    "image_url": "https://cdn.pixabay.com/photo/2016/09/16/19/14/coffee-1674884_960_720.png",
                    "alt_text": "cute cat"
                  }
                }
              ]
            }' # default is { "text": "Content not set" }
      - if: ${{ job.status != 'success' }}
        with:
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          content:
            '{
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Details of  ${{ github.event_name }}  ... for  ${{github.actor }}",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "The code status is  ${{ job.status }}  please checkout and repair"
                  },
                  "accessory": {
                    "type": "image",
                    "image_url": "https://cdn.pixabay.com/photo/2019/03/07/23/55/ncorrect-answer-4041502_960_720.png",
                    "alt_text": "cute cat"
                  }
                }
              ]
            }'
      - name: Sonar
        if: success()
        run: >
          mvn -B verify -DskipTests sonar:sonar
          -Dsonar.projectKey=com.pragma:red-de-apoyo-internacional-backend
          -Dsonar.organization=jonatancon1
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}